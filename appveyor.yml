version: 1.0.{build}

clone_folder: c:\projects\idyntree

environment:
  Eigen3_DIR:          C:/Program Files (x86)/Eigen/lib/cmake/eigen3/
  CMAKE_PREFIX_PATH:   c:\projects\rad\robotology-additional-dependencies-0.1.0-x86\x86-windows\;c:\projects\rad\robotology-additional-dependencies-0.1.0-x86\x86-windows\debug

os:
 - Visual Studio 2015
 - Visual Studio 2017

install:
  # download and install libxml2 
  - ps: Start-FileDownload https://github.com/robotology-playground/robotology-additional-dependencies/releases/download/v0.1.0/robotology-additional-dependencies-0.1.0-v14-x86.zip -FileName c:\projects\rad.zip -Timeout 300000
  - ps: Expand-Archive c:\projects\rad.zip -DestinationPath c:\projects\rad
  # Check env variables 
  - cmd: echo CMAKE_PREFIX_PATH %CMAKE_PREFIX_PATH%
  - cmd: set PATH=%PATH%;c:\projects\rad\robotology-additional-dependencies-0.1.0-x86\x86-windows\bin;c:\projects\rad\robotology-additional-dependencies-0.1.0-x86\x86-windows\debug\bin
  - cmd: echo PATH %PATH%
build:

build_script:
  # download and build tinyxml
  - cd c:\projects
  - git clone https://github.com/robotology-dependencies/tinyxml
  - cd tinyxml
  - md build
  - cd build
  - cmake ..
  - msbuild /m /p:Configuration=Release /p:Platform="Win32" tinyxml.sln
  - cmake --build . --config Release
  - cmake --build . --config Release --target INSTALL
  # download and install eigen3
  - cd c:\projects
  - hg clone https://bitbucket.org/eigen/eigen
  - cd eigen
  - hg checkout 3.3-beta2
  - md build
  - cd build
  - cmake ..
  - cmake --build . --config Release --target INSTALL
  # compile iDynTree
  - cd c:\projects\idyntree
  - md build
  - cd build
  - cmake .. -DEIGEN3_INCLUDE_DIR="C:/Program Files (x86)/Eigen/include/eigen3" -DIDYNTREE_USES_KDL:BOOL=OFF -DIDYNTREE_USES_IPOPT:BOOL=OFF -DIDYNTREE_USES_YARP:BOOL=OFF -DIDYNTREE_USES_ICUB_MAIN:BOOL=OFF -DIDYNTREE_COMPILE_TESTS:BOOL=ON
  - msbuild /m /p:Configuration=Release /p:Platform="Win32" iDynTree.sln
  - cmake --build . --config Release
  - ctest --output-on-failure --build-config Release
  - cmake --build . --config Release --target INSTALL

