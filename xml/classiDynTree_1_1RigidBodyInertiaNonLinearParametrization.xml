<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::RigidBodyInertiaNonLinearParametrization</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ae323ec7fbb184a0d7744fa37adb427c5" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double iDynTree::RigidBodyInertiaNonLinearParametrization::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="16" column="16" bodyfile="iDynTree/InertiaNonLinearParametrization.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a3a59e7a9d05ddd309234f425426a1beb" prot="public" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Position" kindref="compound">Position</ref></type>
        <definition>Position iDynTree::RigidBodyInertiaNonLinearParametrization::com</definition>
        <argsstring></argsstring>
        <name>com</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="17" column="18" bodyfile="iDynTree/InertiaNonLinearParametrization.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ac1a6ff8ed7fbba5b4bd6f232fc74391f" prot="public" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Rotation" kindref="compound">Rotation</ref></type>
        <definition>Rotation iDynTree::RigidBodyInertiaNonLinearParametrization::link_R_centroidal</definition>
        <argsstring></argsstring>
        <name>link_R_centroidal</name>
        <briefdescription>
<para><ref refid="classiDynTree_1_1Rotation" kindref="compound">Rotation</ref> matrix that takes a vector expressed in the centroidal frame (origin in the center of mass, orientation as the principal axis of the 3D inertia at the center of mass). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="24" column="18" bodyfile="iDynTree/InertiaNonLinearParametrization.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a5f868792868d8b4d03931601172a6b4e" prot="public" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector3</ref></type>
        <definition>Vector3 iDynTree::RigidBodyInertiaNonLinearParametrization::centralSecondMomentOfMass</definition>
        <argsstring></argsstring>
        <name>centralSecondMomentOfMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="26" column="17" bodyfile="iDynTree/InertiaNonLinearParametrization.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1af3c47b35dd351b9f7e9d24a110946866" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1Transform" kindref="compound">Transform</ref></type>
        <definition>Transform iDynTree::RigidBodyInertiaNonLinearParametrization::getLinkCentroidalTransform</definition>
        <argsstring>() const</argsstring>
        <name>getLinkCentroidalTransform</name>
        <briefdescription>
<para>Get the transform that applied to a quantity expressed in the centroidal frame it express it in the link frame ( link_H_centroidal ). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="32" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a2cd0ec22c0284865c3a96bdf8cebfcaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::RigidBodyInertiaNonLinearParametrization::fromRigidBodyInertia</definition>
        <argsstring>(const SpatialInertia &amp;inertia)</argsstring>
        <name>fromRigidBodyInertia</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">SpatialInertia</ref> &amp;</type>
          <declname>inertia</declname>
        </param>
        <briefdescription>
<para>Build the parametrization from a RigidBodyInertia. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="37" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1acd6477b2b89370d34b3488a852cb8f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::RigidBodyInertiaNonLinearParametrization::fromInertialParameters</definition>
        <argsstring>(const Vector10 &amp;inertialParams)</argsstring>
        <name>fromInertialParameters</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector10</ref> &amp;</type>
          <declname>inertialParams</declname>
        </param>
        <briefdescription>
<para>Build the nonlinear parametrization from a vector of 10 inertial parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="42" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1aef1db5adbd4ab28303f9245a79a4b8aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">SpatialInertia</ref></type>
        <definition>SpatialInertia iDynTree::RigidBodyInertiaNonLinearParametrization::toRigidBodyInertia</definition>
        <argsstring>() const</argsstring>
        <name>toRigidBodyInertia</name>
        <briefdescription>
<para>Convert the parametrization to a RigidBodyInertia class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="47" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a04f5f4b7bdfb65f28676dc2690ff5e90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::RigidBodyInertiaNonLinearParametrization::isPhysicallyConsistent</definition>
        <argsstring>() const</argsstring>
        <name>isPhysicallyConsistent</name>
        <briefdescription>
<para>Check that the mass is positive and the central second moments of mass are nonnegative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="53" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a5211cdc73b612df5798d86bd0ed7173b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector16</ref></type>
        <definition>Vector16 iDynTree::RigidBodyInertiaNonLinearParametrization::asVectorWithRotationAsVec</definition>
        <argsstring>() const</argsstring>
        <name>asVectorWithRotationAsVec</name>
        <briefdescription>
<para>Serialize the nonlinear parametrization as a vector of sixteen elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a0a81a97c3836c35c52e6cff4827c5af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::RigidBodyInertiaNonLinearParametrization::fromVectorWithRotationAsVec</definition>
        <argsstring>(const Vector16 &amp;vec)</argsstring>
        <name>fromVectorWithRotationAsVec</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector16</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Build the nonlinear parametrization from a vector of sixteen elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="64" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ac42eb7d4f0c0259d41dae267d5ee1d24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1MatrixFixSize" kindref="compound">Matrix10x16</ref></type>
        <definition>Matrix10x16 iDynTree::RigidBodyInertiaNonLinearParametrization::getGradientWithRotationAsVec</definition>
        <argsstring>() const</argsstring>
        <name>getGradientWithRotationAsVec</name>
        <briefdescription>
<para>Given the mapping between this nonlinear representation and the classical inertia parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>This function return the gradient between the inertial parameters </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/InertiaNonLinearParametrization.h" line="71" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>iDynTree::VectorFixSize&lt; VecSize &gt;</label>
        <link refid="classiDynTree_1_1VectorFixSize"/>
      </node>
      <node id="1">
        <label>iDynTree::RigidBodyInertiaNonLinearParametrization</label>
        <link refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization"/>
        <childnode refid="2" relation="usage">
          <edgelabel>link_R_centroidal</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>centralSecondMomentOfMass</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>com</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::Rotation</label>
        <link refid="classiDynTree_1_1Rotation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Matrix3x3</label>
        <link refid="classiDynTree_1_1MatrixFixSize"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; 3, 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>iDynTree::Position</label>
        <link refid="classiDynTree_1_1Position"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>iDynTree::MatrixFixSize&lt; nRows, nCols &gt;</label>
        <link refid="classiDynTree_1_1MatrixFixSize"/>
      </node>
      <node id="5">
        <label>iDynTree::VectorFixSize&lt; 3 &gt;</label>
        <link refid="classiDynTree_1_1VectorFixSize"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>Vector3</label>
        <link refid="classiDynTree_1_1VectorFixSize"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; 3 &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="iDynTree/InertiaNonLinearParametrization.h" line="13" column="5" bodyfile="iDynTree/InertiaNonLinearParametrization.h" bodystart="14" bodyend="72"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a5211cdc73b612df5798d86bd0ed7173b" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>asVectorWithRotationAsVec</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a5f868792868d8b4d03931601172a6b4e" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>centralSecondMomentOfMass</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a3a59e7a9d05ddd309234f425426a1beb" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>com</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1acd6477b2b89370d34b3488a852cb8f5d" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>fromInertialParameters</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a2cd0ec22c0284865c3a96bdf8cebfcaa" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>fromRigidBodyInertia</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a0a81a97c3836c35c52e6cff4827c5af8" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>fromVectorWithRotationAsVec</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ac42eb7d4f0c0259d41dae267d5ee1d24" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>getGradientWithRotationAsVec</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1af3c47b35dd351b9f7e9d24a110946866" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>getLinkCentroidalTransform</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1a04f5f4b7bdfb65f28676dc2690ff5e90" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>isPhysicallyConsistent</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ac1a6ff8ed7fbba5b4bd6f232fc74391f" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>link_R_centroidal</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1ae323ec7fbb184a0d7744fa37adb427c5" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>mass</name></member>
      <member refid="classiDynTree_1_1RigidBodyInertiaNonLinearParametrization_1aef1db5adbd4ab28303f9245a79a4b8aa" prot="public" virt="non-virtual"><scope>iDynTree::RigidBodyInertiaNonLinearParametrization</scope><name>toRigidBodyInertia</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
