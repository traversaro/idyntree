<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1LinkInertias" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::LinkInertias</compoundname>
    <includes local="no">iDynTree/LinkState.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1LinkInertias_1ab847393927a3b592f0e368a9a9fff267" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">iDynTree::SpatialInertia</ref> &gt;</type>
        <definition>std::vector&lt;iDynTree::SpatialInertia&gt; iDynTree::LinkInertias::m_linkInertials</definition>
        <argsstring></argsstring>
        <name>m_linkInertials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="131" column="21" bodyfile="iDynTree/LinkState.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1a0ce1cf4dd02ee06866ec7fc5a77463f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::LinkInertias::LinkInertias</definition>
        <argsstring>(std::size_t nrOfLinks=0)</argsstring>
        <name>LinkInertias</name>
        <param>
          <type>std::size_t</type>
          <declname>nrOfLinks</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="134" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1a60cd6e5520ade85b41e266eb3fa0f152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::LinkInertias::LinkInertias</definition>
        <argsstring>(const iDynTree::Model &amp;model)</argsstring>
        <name>LinkInertias</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="135" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1a3313f4ddf3c194a744f8b40068579b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::LinkInertias::resize</definition>
        <argsstring>(std::size_t nrOfLinks)</argsstring>
        <name>resize</name>
        <param>
          <type>std::size_t</type>
          <declname>nrOfLinks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="137" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1aae5a016b1e4a4fbbe64456b49eabf90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::LinkInertias::resize</definition>
        <argsstring>(const iDynTree::Model &amp;model)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="138" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1ad8155acbfd65b19d7c373f55e19cc4ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::LinkInertias::isConsistent</definition>
        <argsstring>(const Model &amp;model) const</argsstring>
        <name>isConsistent</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="140" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1ab67c42be02c7ed3a91b7e5c9cfb9d837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">iDynTree::SpatialInertia</ref> &amp;</type>
        <definition>iDynTree::SpatialInertia&amp; iDynTree::LinkInertias::operator()</definition>
        <argsstring>(const LinkIndex link)</argsstring>
        <name>operator()</name>
        <param>
          <type>const LinkIndex</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="142" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1adf8d1b92f6ffcdf0005d146189e797df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">iDynTree::SpatialInertia</ref> &amp;</type>
        <definition>const iDynTree::SpatialInertia&amp; iDynTree::LinkInertias::operator()</definition>
        <argsstring>(const LinkIndex link) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const LinkIndex</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="143" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkInertias_1a829547f0c196567d213789ff44b34288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::LinkInertias::~LinkInertias</definition>
        <argsstring>()</argsstring>
        <name>~LinkInertias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/LinkState.h" line="145" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for storing a vector of <ref refid="classiDynTree_1_1SpatialInertia" kindref="compound">SpatialInertia</ref> objects , one for each link in a model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iDynTree/LinkState.h" line="128" column="5" bodyfile="iDynTree/LinkState.h" bodystart="129" bodyend="146"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1LinkInertias_1ad8155acbfd65b19d7c373f55e19cc4ed" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>isConsistent</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1a0ce1cf4dd02ee06866ec7fc5a77463f6" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>LinkInertias</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1a60cd6e5520ade85b41e266eb3fa0f152" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>LinkInertias</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1ab847393927a3b592f0e368a9a9fff267" prot="private" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>m_linkInertials</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1ab67c42be02c7ed3a91b7e5c9cfb9d837" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>operator()</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1adf8d1b92f6ffcdf0005d146189e797df" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>operator()</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1a3313f4ddf3c194a744f8b40068579b84" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>resize</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1aae5a016b1e4a4fbbe64456b49eabf90a" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>resize</name></member>
      <member refid="classiDynTree_1_1LinkInertias_1a829547f0c196567d213789ff44b34288" prot="public" virt="non-virtual"><scope>iDynTree::LinkInertias</scope><name>~LinkInertias</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
