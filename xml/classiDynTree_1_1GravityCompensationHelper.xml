<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1GravityCompensationHelper" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::GravityCompensationHelper</compoundname>
    <includes local="no">iDynTree/GravityCompensationHelpers.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a6206b17c9fbaad20d2336cde8f73eeea" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::m_isModelValid</definition>
        <argsstring></argsstring>
        <name>m_isModelValid</name>
        <briefdescription>
<para>flag to check validity of the model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="104" column="10" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a390889893d61d6b7a185fea39d11ad1f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::m_isKinematicsUpdated</definition>
        <argsstring></argsstring>
        <name>m_isKinematicsUpdated</name>
        <briefdescription>
<para>flag to check if kinematics of the robot is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="105" column="10" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1aa8f44736069c187a83423fbe308f1e07" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref></type>
        <definition>iDynTree::Model iDynTree::GravityCompensationHelper::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
<para>robot model for gravity compensation estimation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="106" column="21" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a6c635f0df2541489dd9fd3db18c12d43" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Traversal" kindref="compound">iDynTree::Traversal</ref></type>
        <definition>iDynTree::Traversal iDynTree::GravityCompensationHelper::m_dynamicTraversal</definition>
        <argsstring></argsstring>
        <name>m_dynamicTraversal</name>
        <briefdescription>
<para><ref refid="classiDynTree_1_1Traversal" kindref="compound">Traversal</ref> used for dynamic computations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="108" column="25" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1aeb405a4a57c2b305b2b53b9049edb160" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Traversal" kindref="compound">iDynTree::Traversal</ref> * &gt;</type>
        <definition>std::vector&lt;iDynTree::Traversal*&gt; iDynTree::GravityCompensationHelper::m_kinematicTraversals</definition>
        <argsstring></argsstring>
        <name>m_kinematicTraversals</name>
        <briefdescription>
<para>Vector of <ref refid="classiDynTree_1_1Traversal" kindref="compound">Traversal</ref> used for the kinematic computations. </para>
        </briefdescription>
        <detaileddescription>
<para>m_kinematicTraversals[l] contains the traversal with base link l . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="114" column="17" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a5d6178f2b09379aa781299a3da6f98c0" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">iDynTree::JointPosDoubleArray</ref></type>
        <definition>iDynTree::JointPosDoubleArray iDynTree::GravityCompensationHelper::m_jointPos</definition>
        <argsstring></argsstring>
        <name>m_jointPos</name>
        <briefdescription>
<para>joint positions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="116" column="35" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1aae77bde19e2b00f6524d8f15671dd5b9" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">iDynTree::JointDOFsDoubleArray</ref></type>
        <definition>iDynTree::JointDOFsDoubleArray iDynTree::GravityCompensationHelper::m_jointDofsZero</definition>
        <argsstring></argsstring>
        <name>m_jointDofsZero</name>
        <briefdescription>
<para>zero DOFArrays for joint velocities and joint accelerations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="117" column="36" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1af906f8bb52a0b594873e21f040c3208f" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkVelArray" kindref="compound">iDynTree::LinkVelArray</ref></type>
        <definition>iDynTree::LinkVelArray iDynTree::GravityCompensationHelper::m_linkVels</definition>
        <argsstring></argsstring>
        <name>m_linkVels</name>
        <briefdescription>
<para>link velocities </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="118" column="28" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a18d75af06c5df38e81e92735545bdb8d" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkAccArray" kindref="compound">iDynTree::LinkAccArray</ref></type>
        <definition>iDynTree::LinkAccArray iDynTree::GravityCompensationHelper::m_linkProperAccs</definition>
        <argsstring></argsstring>
        <name>m_linkProperAccs</name>
        <briefdescription>
<para>link proper accelerations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="119" column="28" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a4c0d776c4a5cf531d22f65d7006be90e" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkWrenches" kindref="compound">iDynTree::LinkNetExternalWrenches</ref></type>
        <definition>iDynTree::LinkNetExternalWrenches iDynTree::GravityCompensationHelper::m_linkNetExternalWrenchesZero</definition>
        <argsstring></argsstring>
        <name>m_linkNetExternalWrenchesZero</name>
        <briefdescription>
<para>link external wrenches set to zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="120" column="39" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1a6d7a7bc115ed28bc60a9a8f9a7b71e96" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkWrenches" kindref="compound">iDynTree::LinkInternalWrenches</ref></type>
        <definition>iDynTree::LinkInternalWrenches iDynTree::GravityCompensationHelper::m_linkIntWrenches</definition>
        <argsstring></argsstring>
        <name>m_linkIntWrenches</name>
        <briefdescription>
<para>link internal wrenches </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="121" column="36" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1GravityCompensationHelper_1af24b6095bee839a53eee520a92ad0045" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1FreeFloatingGeneralizedTorques" kindref="compound">iDynTree::FreeFloatingGeneralizedTorques</ref></type>
        <definition>iDynTree::FreeFloatingGeneralizedTorques iDynTree::GravityCompensationHelper::m_generalizedTorques</definition>
        <argsstring></argsstring>
        <name>m_generalizedTorques</name>
        <briefdescription>
<para>generalized torques </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="122" column="46" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1abe9eec30b6254c5e31aa753599548c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::GravityCompensationHelper::GravityCompensationHelper</definition>
        <argsstring>()</argsstring>
        <name>GravityCompensationHelper</name>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a24f682469783b3c8d45d6ebbad86c35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::GravityCompensationHelper::~GravityCompensationHelper</definition>
        <argsstring>()</argsstring>
        <name>~GravityCompensationHelper</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1ad1eb9a519a13ec91f51ec8e0f854c1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::loadModel</definition>
        <argsstring>(const iDynTree::Model &amp;_model, const std::string dynamicBase)</argsstring>
        <name>loadModel</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> &amp;</type>
          <declname>_model</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>dynamicBase</declname>
        </param>
        <briefdescription>
<para>Load model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a463e3469b51d8ed052f968046bb28a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::updateKinematicsFromProperAcceleration</definition>
        <argsstring>(const iDynTree::JointPosDoubleArray &amp;jointPos, const iDynTree::FrameIndex &amp;floatingFrame, const iDynTree::Vector3 &amp;properClassicalLinearAcceleration)</argsstring>
        <name>updateKinematicsFromProperAcceleration</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">iDynTree::JointPosDoubleArray</ref> &amp;</type>
          <declname>jointPos</declname>
        </param>
        <param>
          <type>const iDynTree::FrameIndex &amp;</type>
          <declname>floatingFrame</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">iDynTree::Vector3</ref> &amp;</type>
          <declname>properClassicalLinearAcceleration</declname>
        </param>
        <briefdescription>
<para>Set the kinematic information necessary for the gravity torques estimation using the proper acceleration coming from an accelerometer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the estimation of the gravity assumes the non-gravitational accelerations measured by the accelerometer as negligible.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the joints in the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">floatingFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame index for which proper acceleration is provided </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">properClassicalLinearAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>proper (actual acceleration - gravity) classical acceleration of the origin of the specified frame, expresssed in the specified frame orientation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a43e80215c956c765e241b5165ad6ee37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::updateKinematicsFromGravity</definition>
        <argsstring>(const iDynTree::JointPosDoubleArray &amp;jointPos, const iDynTree::FrameIndex &amp;floatingFrame, const iDynTree::Vector3 &amp;gravity)</argsstring>
        <name>updateKinematicsFromGravity</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">iDynTree::JointPosDoubleArray</ref> &amp;</type>
          <declname>jointPos</declname>
        </param>
        <param>
          <type>const iDynTree::FrameIndex &amp;</type>
          <declname>floatingFrame</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">iDynTree::Vector3</ref> &amp;</type>
          <declname>gravity</declname>
        </param>
        <briefdescription>
<para>Set the kinematic information necessary for the gravity torques estimation using the assumed known gravity vector on frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is implemented as updateKinematicsFromProperAcceleration(jointPos, floatingFrame, -gravity);</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the joints in the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">floatingFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame index for which gravity vector is provided </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">properClassicalLinearAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>gravity acceleration of the origin of the specified frame, expresssed in the specified frame orientation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a5d6fa165303efe2a4078cb663661066f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::GravityCompensationHelper::getGravityCompensationTorques</definition>
        <argsstring>(iDynTree::JointDOFsDoubleArray &amp;jointTrqs)</argsstring>
        <name>getGravityCompensationTorques</name>
        <param>
          <type><ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">iDynTree::JointDOFsDoubleArray</ref> &amp;</type>
          <declname>jointTrqs</declname>
        </param>
        <briefdescription>
<para>Get the gravity compensation torques. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="90" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a72abe3246f5f6f6b28c3ed5bb7223618" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::GravityCompensationHelper::allocKinematicTraversals</definition>
        <argsstring>(const size_t nrOfLinks)</argsstring>
        <name>allocKinematicTraversals</name>
        <param>
          <type>const size_t</type>
          <declname>nrOfLinks</declname>
        </param>
        <briefdescription>
<para>Helper function for kinematic traversal dynamic allocation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nrOfLinks</parametername>
</parameternamelist>
<parameterdescription>
<para>number of links to be allocated in the traversal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1GravityCompensationHelper_1a0fe673dad2bc1665e6843c0a0a2acfd7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::GravityCompensationHelper::freeKinematicTraversals</definition>
        <argsstring>()</argsstring>
        <name>freeKinematicTraversals</name>
        <briefdescription>
<para>Helper function for kinematic traversal dynamic deallocation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/GravityCompensationHelpers.h" line="102" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class computing the gravity compensation torques using accelerometer measurements. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>the estimation of the gravity assumes the non-gravitational accelerations measured by the accelerometer as negligible </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="iDynTree/GravityCompensationHelpers.h" line="29" column="3" bodyfile="iDynTree/GravityCompensationHelpers.h" bodystart="30" bodyend="123"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a72abe3246f5f6f6b28c3ed5bb7223618" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>allocKinematicTraversals</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a0fe673dad2bc1665e6843c0a0a2acfd7" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>freeKinematicTraversals</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a5d6fa165303efe2a4078cb663661066f" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>getGravityCompensationTorques</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1abe9eec30b6254c5e31aa753599548c54" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>GravityCompensationHelper</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1ad1eb9a519a13ec91f51ec8e0f854c1ef" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>loadModel</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a6c635f0df2541489dd9fd3db18c12d43" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_dynamicTraversal</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1af24b6095bee839a53eee520a92ad0045" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_generalizedTorques</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a390889893d61d6b7a185fea39d11ad1f" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_isKinematicsUpdated</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a6206b17c9fbaad20d2336cde8f73eeea" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_isModelValid</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1aae77bde19e2b00f6524d8f15671dd5b9" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_jointDofsZero</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a5d6178f2b09379aa781299a3da6f98c0" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_jointPos</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1aeb405a4a57c2b305b2b53b9049edb160" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_kinematicTraversals</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a6d7a7bc115ed28bc60a9a8f9a7b71e96" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_linkIntWrenches</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a4c0d776c4a5cf531d22f65d7006be90e" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_linkNetExternalWrenchesZero</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a18d75af06c5df38e81e92735545bdb8d" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_linkProperAccs</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1af906f8bb52a0b594873e21f040c3208f" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_linkVels</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1aa8f44736069c187a83423fbe308f1e07" prot="private" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>m_model</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a43e80215c956c765e241b5165ad6ee37" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>updateKinematicsFromGravity</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a463e3469b51d8ed052f968046bb28a57" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>updateKinematicsFromProperAcceleration</name></member>
      <member refid="classiDynTree_1_1GravityCompensationHelper_1a24f682469783b3c8d45d6ebbad86c35a" prot="public" virt="non-virtual"><scope>iDynTree::GravityCompensationHelper</scope><name>~GravityCompensationHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
