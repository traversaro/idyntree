<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1optimalcontrol_1_1TimeRange" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::optimalcontrol::TimeRange</compoundname>
    <includes local="no">iDynTree/TimeRange.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ab39722ede644e0629deee05ca15878e6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double iDynTree::optimalcontrol::TimeRange::m_initTime</definition>
        <argsstring></argsstring>
        <name>m_initTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="23" column="20" bodyfile="iDynTree/TimeRange.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ac3edb9e756d7976e44ea3f9b706fc482" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double iDynTree::optimalcontrol::TimeRange::m_endTime</definition>
        <argsstring></argsstring>
        <name>m_endTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="24" column="20" bodyfile="iDynTree/TimeRange.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1adca536975f6a54b7fe55265ed54efad9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::m_anyTime</definition>
        <argsstring></argsstring>
        <name>m_anyTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="25" column="18" bodyfile="iDynTree/TimeRange.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1abec74795c9958ccf0966cb787f87e1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::optimalcontrol::TimeRange::TimeRange</definition>
        <argsstring>()</argsstring>
        <name>TimeRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="27" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a1bff0f60d902de8887b89ab7b241296a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::optimalcontrol::TimeRange::TimeRange</definition>
        <argsstring>(const double init, const double end)</argsstring>
        <name>TimeRange</name>
        <param>
          <type>const double</type>
          <declname>init</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="28" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a8777a4422ff57f9d0e4f0c7e9b92983c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double iDynTree::optimalcontrol::TimeRange::initTime</definition>
        <argsstring>() const</argsstring>
        <name>initTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="30" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1aaa3e2e156c7711165572a232bc589d7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double iDynTree::optimalcontrol::TimeRange::endTime</definition>
        <argsstring>() const</argsstring>
        <name>endTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="31" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1abf9e5ee1e08f815bf4661216d4dd14dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double iDynTree::optimalcontrol::TimeRange::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="32" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1aa6c1fe8169f79d13ecf89aba2ce70132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::setTimeInterval</definition>
        <argsstring>(const double init, const double end)</argsstring>
        <name>setTimeInterval</name>
        <param>
          <type>const double</type>
          <declname>init</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="33" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a4bf8b850c34c312bbb41f620015d16d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::operator&lt;</definition>
        <argsstring>(const TimeRange &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" kindref="compound">TimeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="34" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae3eab5a642f5a8101b64dc7bdd72976b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::operator==</definition>
        <argsstring>(const TimeRange &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" kindref="compound">TimeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="35" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a0c255e38ff0d653c9918e923a4416b9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::operator!=</definition>
        <argsstring>(const TimeRange &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" kindref="compound">TimeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="36" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a47c00f9bf3507d6361701b6bb5c7915e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="37" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae5c421bd30acf3a9770848e114f3b8e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::isInRange</definition>
        <argsstring>(double time) const</argsstring>
        <name>isInRange</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="38" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae08c84a663dbdef2bd7707794ad76b6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::optimalcontrol::TimeRange::isInstant</definition>
        <argsstring>() const</argsstring>
        <name>isInstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="39" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a6dcef7d7e66f35761a665b0293dd7bc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" kindref="compound">TimeRange</ref></type>
        <definition>static TimeRange iDynTree::optimalcontrol::TimeRange::AnyTime</definition>
        <argsstring>()</argsstring>
        <name>AnyTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="40" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a83905ffe68b4cc48b2d2e3c396fdb370" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1optimalcontrol_1_1TimeRange" kindref="compound">TimeRange</ref></type>
        <definition>static TimeRange iDynTree::optimalcontrol::TimeRange::Instant</definition>
        <argsstring>(const double time)</argsstring>
        <name>Instant</name>
        <param>
          <type>const double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/TimeRange.h" line="41" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This class is still in active development, and so API interface can change between iDynTree versions. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="iDynTree/TimeRange.h" line="22" column="9" bodyfile="iDynTree/TimeRange.h" bodystart="22" bodyend="42"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a6dcef7d7e66f35761a665b0293dd7bc1" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>AnyTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1aaa3e2e156c7711165572a232bc589d7d" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>endTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a8777a4422ff57f9d0e4f0c7e9b92983c" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>initTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a83905ffe68b4cc48b2d2e3c396fdb370" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>Instant</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae5c421bd30acf3a9770848e114f3b8e5" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>isInRange</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae08c84a663dbdef2bd7707794ad76b6f" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>isInstant</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a47c00f9bf3507d6361701b6bb5c7915e" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>isValid</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1abf9e5ee1e08f815bf4661216d4dd14dd" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>length</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1adca536975f6a54b7fe55265ed54efad9" prot="private" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>m_anyTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ac3edb9e756d7976e44ea3f9b706fc482" prot="private" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>m_endTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ab39722ede644e0629deee05ca15878e6" prot="private" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>m_initTime</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a0c255e38ff0d653c9918e923a4416b9c" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>operator!=</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a4bf8b850c34c312bbb41f620015d16d7" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>operator&lt;</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1ae3eab5a642f5a8101b64dc7bdd72976b" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>operator==</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1aa6c1fe8169f79d13ecf89aba2ce70132" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>setTimeInterval</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1abec74795c9958ccf0966cb787f87e1cc" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>TimeRange</name></member>
      <member refid="classiDynTree_1_1optimalcontrol_1_1TimeRange_1a1bff0f60d902de8887b89ab7b241296a" prot="public" virt="non-virtual"><scope>iDynTree::optimalcontrol::TimeRange</scope><name>TimeRange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
