<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1MatrixView" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::MatrixView</compoundname>
    <includes local="no">iDynTree/MatrixView.h</includes>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Matrix interface methods.</header>
      <description><para>Methods exposing a matrix-like interface to <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref>. </para>
</description>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a092ebd4808170febd09bb929fd95113f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference iDynTree::MatrixView&lt; ElementType &gt;::operator()</definition>
        <argsstring>(index_type row, const index_type col) const</argsstring>
        <name>operator()</name>
        <param>
          <type>index_type</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const index_type</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="210" column="19" bodyfile="iDynTree/MatrixView.h" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1aa16cb002391f1c96c1cc32132e20d9fd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::rows</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="217" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a8200d4740e5a69f4c6ed40f07a85fe0b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::cols</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="222" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="222" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classiDynTree_1_1MatrixView_1ad9e1444db0096d0623df794440bbd2b1" prot="public" static="no">
        <type>ElementType</type>
        <definition>using iDynTree::MatrixView&lt; ElementType &gt;::element_type =  ElementType</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="60" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1MatrixView_1a5d33d16d1aebd5a37964e7a678545021" prot="public" static="no">
        <type>std::remove_cv_t&lt; ElementType &gt;</type>
        <definition>using iDynTree::MatrixView&lt; ElementType &gt;::value_type =  std::remove_cv_t&lt;ElementType&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="61" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1MatrixView_1a6e551202ddbc0ed464c204a66336f32c" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using iDynTree::MatrixView&lt; ElementType &gt;::index_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="62" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1MatrixView_1a6caea1fc990d2cfd94caf33cb4c0d24a" prot="public" static="no">
        <type>element_type *</type>
        <definition>using iDynTree::MatrixView&lt; ElementType &gt;::pointer =  element_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="63" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1MatrixView_1aeff127d6c52901d3c0915a537e0e0c0a" prot="public" static="no">
        <type>element_type &amp;</type>
        <definition>using iDynTree::MatrixView&lt; ElementType &gt;::reference =  element_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="64" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1a2f9f1690022c98e793ff816c928015f9" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer iDynTree::MatrixView&lt; ElementType &gt;::m_storage</definition>
        <argsstring></argsstring>
        <name>m_storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="67" column="17" bodyfile="iDynTree/MatrixView.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1a5be729e9597aa6d4f526ef2dd745f7fe" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::m_rows</definition>
        <argsstring></argsstring>
        <name>m_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="68" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1aa216099c5a938368e61e30c6ae43b1e1" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::m_cols</definition>
        <argsstring></argsstring>
        <name>m_cols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="69" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1a45d4c496b5eac7957826e445249c316e" prot="private" static="no" mutable="no">
        <type>MatrixStorageOrdering</type>
        <definition>MatrixStorageOrdering iDynTree::MatrixView&lt; ElementType &gt;::m_storageOrder</definition>
        <argsstring></argsstring>
        <name>m_storageOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="71" column="31" bodyfile="iDynTree/MatrixView.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1adbc95166204ebe749b9a421fdda4b161" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::m_innerStride</definition>
        <argsstring></argsstring>
        <name>m_innerStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="73" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1MatrixView_1a1e44835230042a66e8568336d00d0f84" prot="private" static="no" mutable="no">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::m_outerStride</definition>
        <argsstring></argsstring>
        <name>m_outerStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="74" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1aea394996c9fbbd3afcea2ddf9eee5f2c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>index_type</type>
        <definition>index_type iDynTree::MatrixView&lt; ElementType &gt;::rawIndex</definition>
        <argsstring>(index_type row, index_type col) const</argsstring>
        <name>rawIndex</name>
        <param>
          <type>index_type</type>
          <declname>row</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="76" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="76" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a4207d5ae70188d7fe429ddb4c5914e0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>()</argsstring>
        <name>MatrixView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="89" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1aed1875e3fef525592b94d6ba22e0a298" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(const MatrixView &amp;other)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="92" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a6bb4d3e896edacfbec46d821fd30674e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &amp;</type>
        <definition>MatrixView&amp; iDynTree::MatrixView&lt; ElementType &gt;::operator=</definition>
        <argsstring>(const MatrixView &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="98" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1abb709adaca2698acb0120730d5ca68a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherElementType</type>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;                <ref refid="structiDynTree_1_1details_1_1is__allowed__element__type__conversion" kindref="compound">details::is_allowed_element_type_conversion</ref>&lt;typename <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref>&lt;OtherElementType&gt;::value_type,                                                            value_type&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type>IDYNTREE_CONSTEXPR</type>
        <definition>IDYNTREE_CONSTEXPR iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(const MatrixView&lt; OtherElementType &gt; &amp;other)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref>&lt; OtherElementType &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="115" column="28" bodyfile="iDynTree/MatrixView.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a2f8730641cf5cac6a6cba7d203c556d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const&lt; element_type &gt;::value &amp;&amp;std::is_convertible&lt; decltype(std::declval&lt; Container &gt;().data()), pointer &gt;::value &amp;&amp;<ref refid="structiDynTree_1_1MatrixViewInternal_1_1has__IsRowMajor" kindref="compound">MatrixViewInternal::has_IsRowMajor</ref>&lt; Container &gt;::value &amp;&amp;!std::is_same&lt; Container, <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &gt;::value</type>
          </param>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(const Container &amp;matrix)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>const Container &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="129" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a355e26185fa9e11b84da8691c07ce7ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const&lt; element_type &gt;::value &amp;&amp;std::is_convertible&lt; decltype(std::declval&lt; Container &gt;().data()), pointer &gt;::value &amp;&amp;!<ref refid="structiDynTree_1_1MatrixViewInternal_1_1has__IsRowMajor" kindref="compound">MatrixViewInternal::has_IsRowMajor</ref>&lt; Container &gt;::value &amp;&amp;!std::is_same&lt; Container, <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &gt;::value</type>
          </param>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(const Container &amp;matrix, const MatrixStorageOrdering &amp;order=MatrixStorageOrdering::RowMajor)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>const Container &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const MatrixStorageOrdering &amp;</type>
          <declname>order</declname>
          <defval>MatrixStorageOrdering::RowMajor</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="146" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a7dd144664967816eb02580823507197e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_convertible&lt; decltype(std::declval&lt; Container &gt;().data()), pointer &gt;::value &amp;&amp;<ref refid="structiDynTree_1_1MatrixViewInternal_1_1has__IsRowMajor" kindref="compound">MatrixViewInternal::has_IsRowMajor</ref>&lt; Container &gt;::value &amp;&amp;!std::is_same&lt; Container, <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &gt;::value</type>
          </param>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(Container &amp;matrix)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>Container &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="157" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="157" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1abe72c8a6694437d844fe24fd5685248a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_convertible&lt; decltype(std::declval&lt; Container &gt;().data()), pointer &gt;::value &amp;&amp;!<ref refid="structiDynTree_1_1MatrixViewInternal_1_1has__IsRowMajor" kindref="compound">MatrixViewInternal::has_IsRowMajor</ref>&lt; Container &gt;::value &amp;&amp;!std::is_same&lt; Container, <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> &gt;::value &amp;&amp;!std::is_same&lt; Container, <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref>&lt; std::remove_pointer_t&lt; decltype(std::declval&lt; Container &gt;().data())&gt;&gt;</type>
          </param>
          <param>
            <type>::value</type>
          </param>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(Container &amp;matrix, const MatrixStorageOrdering &amp;order=MatrixStorageOrdering::RowMajor)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>Container &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const MatrixStorageOrdering &amp;</type>
          <declname>order</declname>
          <defval>MatrixStorageOrdering::RowMajor</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="174" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a539e9cd6aea702d1dfab9a98089da31a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iDynTree::MatrixView&lt; ElementType &gt;::MatrixView</definition>
        <argsstring>(pointer in_data, index_type in_rows, index_type in_cols, const MatrixStorageOrdering &amp;order=MatrixStorageOrdering::RowMajor)</argsstring>
        <name>MatrixView</name>
        <param>
          <type>pointer</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>in_rows</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>in_cols</declname>
        </param>
        <param>
          <type>const MatrixStorageOrdering &amp;</type>
          <declname>order</declname>
          <defval>MatrixStorageOrdering::RowMajor</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="181" column="9" bodyfile="iDynTree/MatrixView.h" bodystart="181" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a880aa2415d1173004fb0ff7ff39067bf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const MatrixStorageOrdering &amp;</type>
        <definition>const MatrixStorageOrdering&amp; iDynTree::MatrixView&lt; ElementType &gt;::storageOrder</definition>
        <argsstring>() const noexcept</argsstring>
        <name>storageOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="194" column="37" bodyfile="iDynTree/MatrixView.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1accb2fba67d5ab1bcb604481f27cad9db" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer iDynTree::MatrixView&lt; ElementType &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="199" column="17" bodyfile="iDynTree/MatrixView.h" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1MatrixView_1a6db1a78ec1d4fd9e6f92695e37d921d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref></type>
        <definition>MatrixView iDynTree::MatrixView&lt; ElementType &gt;::block</definition>
        <argsstring>(index_type startingRow, index_type startingColumn, index_type rows, index_type cols) const</argsstring>
        <name>block</name>
        <param>
          <type>index_type</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/MatrixView.h" line="228" column="20" bodyfile="iDynTree/MatrixView.h" bodystart="228" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> implements a view interface of Matrices. </para>
    </briefdescription>
    <detaileddescription>
<para>Both RowMajor and ColumnMajor matrices are supported. <simplesect kind="note"><para>The user should define the storage ordering when the <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> is created (the default order is RowMajor). However if the <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref> is generated:<itemizedlist>
<listitem><para>from an object having a public member called <computeroutput>IsRowMajor</computeroutput>, the correct storage order is chosen.</para>
</listitem><listitem><para>from another <ref refid="classiDynTree_1_1MatrixView" kindref="compound">MatrixView</ref>, the correct storage order is chosen. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
    </detaileddescription>
    <location file="iDynTree/MatrixView.h" line="57" column="16" bodyfile="iDynTree/MatrixView.h" bodystart="58" bodyend="246"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1MatrixView_1a6db1a78ec1d4fd9e6f92695e37d921d6" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>block</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a8200d4740e5a69f4c6ed40f07a85fe0b" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>cols</name></member>
      <member refid="classiDynTree_1_1MatrixView_1accb2fba67d5ab1bcb604481f27cad9db" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>data</name></member>
      <member refid="classiDynTree_1_1MatrixView_1ad9e1444db0096d0623df794440bbd2b1" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>element_type</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a6e551202ddbc0ed464c204a66336f32c" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>index_type</name></member>
      <member refid="classiDynTree_1_1MatrixView_1aa216099c5a938368e61e30c6ae43b1e1" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_cols</name></member>
      <member refid="classiDynTree_1_1MatrixView_1adbc95166204ebe749b9a421fdda4b161" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_innerStride</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a1e44835230042a66e8568336d00d0f84" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_outerStride</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a5be729e9597aa6d4f526ef2dd745f7fe" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_rows</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a2f9f1690022c98e793ff816c928015f9" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_storage</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a45d4c496b5eac7957826e445249c316e" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>m_storageOrder</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a4207d5ae70188d7fe429ddb4c5914e0e" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1aed1875e3fef525592b94d6ba22e0a298" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1abb709adaca2698acb0120730d5ca68a6" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a2f8730641cf5cac6a6cba7d203c556d1" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a355e26185fa9e11b84da8691c07ce7ac" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a7dd144664967816eb02580823507197e" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1abe72c8a6694437d844fe24fd5685248a" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a539e9cd6aea702d1dfab9a98089da31a" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>MatrixView</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a092ebd4808170febd09bb929fd95113f" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>operator()</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a6bb4d3e896edacfbec46d821fd30674e" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>operator=</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a6caea1fc990d2cfd94caf33cb4c0d24a" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>pointer</name></member>
      <member refid="classiDynTree_1_1MatrixView_1aea394996c9fbbd3afcea2ddf9eee5f2c" prot="private" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>rawIndex</name></member>
      <member refid="classiDynTree_1_1MatrixView_1aeff127d6c52901d3c0915a537e0e0c0a" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>reference</name></member>
      <member refid="classiDynTree_1_1MatrixView_1aa16cb002391f1c96c1cc32132e20d9fd" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>rows</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a880aa2415d1173004fb0ff7ff39067bf" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>storageOrder</name></member>
      <member refid="classiDynTree_1_1MatrixView_1a5d33d16d1aebd5a37964e7a678545021" prot="public" virt="non-virtual"><scope>iDynTree::MatrixView</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
