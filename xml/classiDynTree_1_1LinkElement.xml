<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1LinkElement" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::LinkElement</compoundname>
    <basecompoundref refid="classiDynTree_1_1XMLElement" prot="public" virt="non-virtual">iDynTree::XMLElement</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1LinkElement_1aa82bdf050fff7f3d2dcce327bf6f8dc1" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> &amp;</type>
        <definition>iDynTree::Model&amp; iDynTree::LinkElement::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="22" column="21" bodyfile="private/LinkElement.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1LinkElement_1a772032d46b1a78cac9b41d6854ec9c6d" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Link" kindref="compound">iDynTree::Link</ref></type>
        <definition>iDynTree::Link iDynTree::LinkElement::m_link</definition>
        <argsstring></argsstring>
        <name>m_link</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="24" column="20" bodyfile="private/LinkElement.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1LinkElement_1a710dd040a2fb6e3aea532e7c52dcf619" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string iDynTree::LinkElement::m_linkName</definition>
        <argsstring></argsstring>
        <name>m_linkName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="25" column="17" bodyfile="private/LinkElement.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1LinkElement_1a7c621b0556bafdda0ff28a246b28e092" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structiDynTree_1_1VisualElement_1_1VisualInfo" kindref="compound">VisualElement::VisualInfo</ref> &gt;</type>
        <definition>std::vector&lt;VisualElement::VisualInfo&gt; iDynTree::LinkElement::m_visuals</definition>
        <argsstring></argsstring>
        <name>m_visuals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="26" column="17" bodyfile="private/LinkElement.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1LinkElement_1a6fdbf93b4d0d524115e3360a30d7e4c4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structiDynTree_1_1VisualElement_1_1VisualInfo" kindref="compound">VisualElement::VisualInfo</ref> &gt;</type>
        <definition>std::vector&lt;VisualElement::VisualInfo&gt; iDynTree::LinkElement::m_collisions</definition>
        <argsstring></argsstring>
        <name>m_collisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="27" column="17" bodyfile="private/LinkElement.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a5745cbe7ec475bce3bfb03c3242e467e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::LinkElement::LinkElement</definition>
        <argsstring>(XMLParserState &amp;parserState, iDynTree::Model &amp;model)</argsstring>
        <name>LinkElement</name>
        <param>
          <type><ref refid="classiDynTree_1_1XMLParserState" kindref="compound">XMLParserState</ref> &amp;</type>
          <declname>parserState</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a9695289b266371f137eed660bcf76b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; iDynTree::LinkElement::linkName</definition>
        <argsstring>() const</argsstring>
        <name>linkName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="33" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a325075029e428520e8c111508dbb0519" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structiDynTree_1_1VisualElement_1_1VisualInfo" kindref="compound">VisualElement::VisualInfo</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;VisualElement::VisualInfo&gt;&amp; iDynTree::LinkElement::visuals</definition>
        <argsstring>() const</argsstring>
        <name>visuals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="34" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a5b2b9ef8b83181cfd83a2e72799dca30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structiDynTree_1_1VisualElement_1_1VisualInfo" kindref="compound">VisualElement::VisualInfo</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;VisualElement::VisualInfo&gt;&amp; iDynTree::LinkElement::collisions</definition>
        <argsstring>() const</argsstring>
        <name>collisions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="35" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1aed8591a7d1c2a43fa4671cf3d28df1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void iDynTree::LinkElement::exitElementScope</definition>
        <argsstring>() override</argsstring>
        <name>exitElementScope</name>
        <reimplements refid="classiDynTree_1_1XMLElement_1a327997dec2ced313aad008c376205f36">exitElementScope</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="37" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a69e757ba5c3e6949b847ecff39e84c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool iDynTree::LinkElement::setAttributes</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::shared_ptr&lt; iDynTree::XMLAttribute &gt;&gt; &amp;attributes) override</argsstring>
        <name>setAttributes</name>
        <reimplements refid="classiDynTree_1_1XMLElement_1a2fe23e8a9ee4d2f776f792c9c118db45">setAttributes</reimplements>
        <param>
          <type>const std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classiDynTree_1_1XMLAttribute" kindref="compound">iDynTree::XMLAttribute</ref> &gt;&gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1a93a63088eacd944a772bc7a60e3928ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void iDynTree::LinkElement::childHasBeenParsed</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::XMLElement &gt; child) override</argsstring>
        <name>childHasBeenParsed</name>
        <reimplements refid="classiDynTree_1_1XMLElement_1a18b5b00729b99a19cb3e8f430656e152">childHasBeenParsed</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1XMLElement" kindref="compound">iDynTree::XMLElement</ref> &gt;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1LinkElement_1abc38b119e1a884cbbbe9eb7ef66eeeb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classiDynTree_1_1XMLElement" kindref="compound">iDynTree::XMLElement</ref> &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::XMLElement&gt; iDynTree::LinkElement::childElementForName</definition>
        <argsstring>(const std::string &amp;name) override</argsstring>
        <name>childElementForName</name>
        <reimplements refid="classiDynTree_1_1XMLElement_1a94cf11d5e2e9f6a44f17c7439d2b809f">childElementForName</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Factory method to create child element given the name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the element to create </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new parser element for the corresponding tag </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="private/LinkElement.h" line="43" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>iDynTree::LinkElement</label>
        <link refid="classiDynTree_1_1LinkElement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::XMLElement</label>
        <link refid="classiDynTree_1_1XMLElement"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>iDynTree::LinkElement</label>
        <link refid="classiDynTree_1_1LinkElement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::XMLElement</label>
        <link refid="classiDynTree_1_1XMLElement"/>
      </node>
    </collaborationgraph>
    <location file="private/LinkElement.h" line="21" column="1" bodyfile="private/LinkElement.h" bodystart="21" bodyend="45"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1XMLElement_1a2a182ac17f5e644b113a67e02c3595e5" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>attributeCallback</name></member>
      <member refid="classiDynTree_1_1XMLElement_1adf74d829fbe4d3d112c0ef2eba8bd3ea" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>attributes</name></member>
      <member refid="classiDynTree_1_1LinkElement_1abc38b119e1a884cbbbe9eb7ef66eeeb0" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>childElementForName</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a93a63088eacd944a772bc7a60e3928ec" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>childHasBeenParsed</name></member>
      <member refid="classiDynTree_1_1XMLElement_1af5c19c2120a4e024149f78ee5bd52e6f" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>children</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a5b2b9ef8b83181cfd83a2e72799dca30" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>collisions</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a3d8e1b737e614b35e3df0a4f76ac645b" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>description</name></member>
      <member refid="classiDynTree_1_1LinkElement_1aed8591a7d1c2a43fa4671cf3d28df1b6" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>exitElementScope</name></member>
      <member refid="classiDynTree_1_1XMLElement_1aa6f49fb7b1b204e1a84cbdc51faeaa62" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>exitScopeCallback</name></member>
      <member refid="classiDynTree_1_1XMLElement_1abebc95353394912e187ad70e6078fcdc" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>getParsedTextContent</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a2bccce24401b1812a6f485df6098c61f" prot="protected" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>getParserState</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a5745cbe7ec475bce3bfb03c3242e467e" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>LinkElement</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a9695289b266371f137eed660bcf76b05" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>linkName</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a6fdbf93b4d0d524115e3360a30d7e4c4" prot="private" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>m_collisions</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a772032d46b1a78cac9b41d6854ec9c6d" prot="private" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>m_link</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a710dd040a2fb6e3aea532e7c52dcf619" prot="private" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>m_linkName</name></member>
      <member refid="classiDynTree_1_1LinkElement_1aa82bdf050fff7f3d2dcce327bf6f8dc1" prot="private" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>m_model</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a7c621b0556bafdda0ff28a246b28e092" prot="private" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>m_visuals</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a7129fb1e69a5bc819872e65d3965296d" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>name</name></member>
      <member refid="classiDynTree_1_1XMLElement_1aa44416f43c71e081f6637a91eb733e8d" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>parsedCharacters</name></member>
      <member refid="classiDynTree_1_1XMLElement_1ab40851b7629a74107f2183ca36e412e4" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>setAttributeCallback</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a69e757ba5c3e6949b847ecff39e84c07" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>setAttributes</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a69171cc4b5c552b97f44375029356a2e" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>setChildHasBeenParsedCallback</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a16759fb450635662dced0eb2ace0228b" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>setExitScopeCallback</name></member>
      <member refid="classiDynTree_1_1LinkElement_1a325075029e428520e8c111508dbb0519" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>visuals</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a33b172d683ef0118cd0421cc6a84aa22" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>XMLElement</name></member>
      <member refid="classiDynTree_1_1XMLElement_1abf02729e927560aec4a97004cb50388e" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>XMLElement</name></member>
      <member refid="classiDynTree_1_1XMLElement_1a119a37b509545e9a265d4cc9913613eb" prot="public" virt="non-virtual"><scope>iDynTree::LinkElement</scope><name>XMLElement</name></member>
      <member refid="classiDynTree_1_1XMLElement_1aa0220e560dfd45a38797cb5209653ad4" prot="public" virt="virtual"><scope>iDynTree::LinkElement</scope><name>~XMLElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
