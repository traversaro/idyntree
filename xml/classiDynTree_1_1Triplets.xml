<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1Triplets" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::Triplets</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classiDynTree_1_1Triplets_1ae11ba4c0104cb7807609ca90de4e02df" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Triplet" kindref="compound">iDynTree::Triplet</ref> &gt;::iterator</type>
        <definition>typedef std::vector&lt;iDynTree::Triplet&gt;::iterator iDynTree::Triplets::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="162" column="36" bodyfile="iDynTree/Triplets.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1Triplets_1a4201098d5bd15fabb5f196ef043c99f2" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Triplet" kindref="compound">iDynTree::Triplet</ref> &gt;::const_iterator</type>
        <definition>typedef std::vector&lt;iDynTree::Triplet&gt;::const_iterator iDynTree::Triplets::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="163" column="42" bodyfile="iDynTree/Triplets.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1Triplets_1a85a6b4b3d47ba21677d0954967e197ab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Triplet" kindref="compound">iDynTree::Triplet</ref> &gt;</type>
        <definition>std::vector&lt;iDynTree::Triplet&gt; iDynTree::Triplets::m_triplets</definition>
        <argsstring></argsstring>
        <name>m_triplets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="47" column="17" bodyfile="iDynTree/Triplets.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a00db622da777fb9f14c6ef35b6fa2651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::reserve</definition>
        <argsstring>(std::size_t size)</argsstring>
        <name>reserve</name>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a89321cdcaeb114271b0e92e3ddb55662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a2c6b36b8b90cbeb049bd402353b6db23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>rows</declname>
            <defname>rows</defname>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>cols</declname>
            <defname>cols</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void iDynTree::Triplets::addSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const MatrixFixSize&lt; rows, cols &gt; &amp;matrix)</argsstring>
        <name>addSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixFixSize" kindref="compound">MatrixFixSize</ref>&lt; rows, cols &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="55" column="17" bodyfile="iDynTree/Triplets.h" bodystart="55" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a792b425afc344ba09e560237d39b237e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::addSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const MatrixDynSize &amp;)</argsstring>
        <name>addSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixDynSize" kindref="compound">MatrixDynSize</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1aa0768cfe0f8bac5c8229b5c551ace5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>MatrixStorageOrdering</type>
            <declname>ordering</declname>
            <defname>ordering</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void iDynTree::Triplets::addSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const SparseMatrix&lt; ordering &gt; &amp;matrix)</argsstring>
        <name>addSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; ordering &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="73" column="10" bodyfile="iDynTree/Triplets.h" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1aad23407dd497c651929b699a581b8ea8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::addDiagonalMatrix</definition>
        <argsstring>(IndexRange startingRow, IndexRange startingColumn, double value)</argsstring>
        <name>addDiagonalMatrix</name>
        <param>
          <type><ref refid="structiDynTree_1_1IndexRange" kindref="compound">IndexRange</ref></type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type><ref refid="structiDynTree_1_1IndexRange" kindref="compound">IndexRange</ref></type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="88" column="17" bodyfile="iDynTree/Triplets.h" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a3e4ab95b9f422ecb8fe0b16fcb6749b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::addDiagonalMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, double value, std::size_t diagonalMatrixSize)</argsstring>
        <name>addDiagonalMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>diagonalMatrixSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a7a0e994004d7b4c70d972d09c5e764f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::pushTriplet</definition>
        <argsstring>(const Triplet &amp;triplet)</argsstring>
        <name>pushTriplet</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Triplet" kindref="compound">Triplet</ref> &amp;</type>
          <declname>triplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a1aaa1d06d5e9ed59eb35358eba775e20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>rows</declname>
            <defname>rows</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>cols</declname>
            <defname>cols</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void iDynTree::Triplets::setSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const MatrixFixSize&lt; rows, cols &gt; &amp;matrix)</argsstring>
        <name>setSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixFixSize" kindref="compound">MatrixFixSize</ref>&lt; rows, cols &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="106" column="17" bodyfile="iDynTree/Triplets.h" bodystart="106" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a866c541e4b3ab35aa4ca726bb7b1994f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::setSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const MatrixDynSize &amp;)</argsstring>
        <name>setSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1MatrixDynSize" kindref="compound">MatrixDynSize</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1ab1015350269987a7a264a8af7db82b26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>MatrixStorageOrdering</type>
            <declname>ordering</declname>
            <defname>ordering</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void iDynTree::Triplets::setSubMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, const SparseMatrix&lt; ordering &gt; &amp;matrix)</argsstring>
        <name>setSubMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; ordering &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="124" column="10" bodyfile="iDynTree/Triplets.h" bodystart="124" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a9aaadb4251073475f09929398508a208" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::setDiagonalMatrix</definition>
        <argsstring>(IndexRange startingRow, IndexRange startingColumn, double value)</argsstring>
        <name>setDiagonalMatrix</name>
        <param>
          <type><ref refid="structiDynTree_1_1IndexRange" kindref="compound">IndexRange</ref></type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type><ref refid="structiDynTree_1_1IndexRange" kindref="compound">IndexRange</ref></type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="139" column="17" bodyfile="iDynTree/Triplets.h" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a65202c72037a5f6488c6dbcd3aa66bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::setDiagonalMatrix</definition>
        <argsstring>(std::size_t startingRow, std::size_t startingColumn, double value, std::size_t diagonalMatrixSize)</argsstring>
        <name>setDiagonalMatrix</name>
        <param>
          <type>std::size_t</type>
          <declname>startingRow</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>startingColumn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>diagonalMatrixSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1ae15cee789b931896511a29049a13ca77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::Triplets::setTriplet</definition>
        <argsstring>(const Triplet &amp;triplet)</argsstring>
        <name>setTriplet</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Triplet" kindref="compound">Triplet</ref> &amp;</type>
          <declname>triplet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a78f76185da1b4b9bb73d6100f71fa3ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::Triplets::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1abe13e627f7353b76b8eb0bc5c008dcd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t iDynTree::Triplets::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="158" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a86e7823ee8bcb2a5eb8e29581588f4c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string iDynTree::Triplets::description</definition>
        <argsstring>() const</argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="160" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a73dfec983c96f7f00c510363ae973ce8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator iDynTree::Triplets::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="166" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a23164ab120c73d49308124a90bcd407e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator iDynTree::Triplets::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="167" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a25b7e21b053b8426d048ef80f899bbf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator iDynTree::Triplets::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="168" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1Triplets_1a03ab903204e46d2a11738b7ee784970e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator iDynTree::Triplets::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Triplets.h" line="169" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iDynTree/Triplets.h" line="44" column="1" bodyfile="iDynTree/Triplets.h" bodystart="45" bodyend="171"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1Triplets_1aad23407dd497c651929b699a581b8ea8" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>addDiagonalMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a3e4ab95b9f422ecb8fe0b16fcb6749b6" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>addDiagonalMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a2c6b36b8b90cbeb049bd402353b6db23" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>addSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a792b425afc344ba09e560237d39b237e" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>addSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1aa0768cfe0f8bac5c8229b5c551ace5d0" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>addSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a73dfec983c96f7f00c510363ae973ce8" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>begin</name></member>
      <member refid="classiDynTree_1_1Triplets_1a23164ab120c73d49308124a90bcd407e" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>begin</name></member>
      <member refid="classiDynTree_1_1Triplets_1a89321cdcaeb114271b0e92e3ddb55662" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>clear</name></member>
      <member refid="classiDynTree_1_1Triplets_1a4201098d5bd15fabb5f196ef043c99f2" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>const_iterator</name></member>
      <member refid="classiDynTree_1_1Triplets_1a86e7823ee8bcb2a5eb8e29581588f4c9" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>description</name></member>
      <member refid="classiDynTree_1_1Triplets_1a25b7e21b053b8426d048ef80f899bbf0" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>end</name></member>
      <member refid="classiDynTree_1_1Triplets_1a03ab903204e46d2a11738b7ee784970e" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>end</name></member>
      <member refid="classiDynTree_1_1Triplets_1a78f76185da1b4b9bb73d6100f71fa3ea" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>isEmpty</name></member>
      <member refid="classiDynTree_1_1Triplets_1ae11ba4c0104cb7807609ca90de4e02df" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>iterator</name></member>
      <member refid="classiDynTree_1_1Triplets_1a85a6b4b3d47ba21677d0954967e197ab" prot="private" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>m_triplets</name></member>
      <member refid="classiDynTree_1_1Triplets_1a7a0e994004d7b4c70d972d09c5e764f8" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>pushTriplet</name></member>
      <member refid="classiDynTree_1_1Triplets_1a00db622da777fb9f14c6ef35b6fa2651" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>reserve</name></member>
      <member refid="classiDynTree_1_1Triplets_1a9aaadb4251073475f09929398508a208" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setDiagonalMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a65202c72037a5f6488c6dbcd3aa66bfe" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setDiagonalMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a1aaa1d06d5e9ed59eb35358eba775e20" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1a866c541e4b3ab35aa4ca726bb7b1994f" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1ab1015350269987a7a264a8af7db82b26" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setSubMatrix</name></member>
      <member refid="classiDynTree_1_1Triplets_1ae15cee789b931896511a29049a13ca77" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>setTriplet</name></member>
      <member refid="classiDynTree_1_1Triplets_1abe13e627f7353b76b8eb0bc5c008dcd7" prot="public" virt="non-virtual"><scope>iDynTree::Triplets</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
