<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::SensorsList::ConstTypedIterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1aa689a1caaa190d764b62647a57c50c14" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t iDynTree::SensorsList::ConstTypedIterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="408" column="32" bodyfile="iDynTree/Sensors.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1af6c1fd450b1cfbd0b53731fa97613b6a" prot="public" static="no">
        <type><ref refid="classiDynTree_1_1Sensor" kindref="compound">Sensor</ref> *</type>
        <definition>typedef Sensor* iDynTree::SensorsList::ConstTypedIterator::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="409" column="24" bodyfile="iDynTree/Sensors.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a9e6220679fb6468ca5727658eb5f9100" prot="public" static="no">
        <type>const <ref refid="classiDynTree_1_1Sensor" kindref="compound">value_type</ref> &amp;</type>
        <definition>typedef const value_type&amp; iDynTree::SensorsList::ConstTypedIterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="410" column="34" bodyfile="iDynTree/Sensors.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a17f21b802f07869341619a00063d1fdb" prot="public" static="no">
        <type>const <ref refid="classiDynTree_1_1Sensor" kindref="compound">value_type</ref> *</type>
        <definition>typedef const value_type* iDynTree::SensorsList::ConstTypedIterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="411" column="34" bodyfile="iDynTree/Sensors.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a3b3e65284f302aeb199ef1fdc1f80949" prot="public" static="no">
        <type>std::input_iterator_tag</type>
        <definition>typedef std::input_iterator_tag iDynTree::SensorsList::ConstTypedIterator::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="412" column="41" bodyfile="iDynTree/Sensors.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a51c57a31c0c18c18341920b6346dc830" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SensorsList</definition>
        <argsstring></argsstring>
        <name>SensorsList</name>
        <param>
          <type><ref refid="classiDynTree_1_1SensorsList" kindref="compound">SensorsList</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="400" column="9" bodyfile="iDynTree/Sensors.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1aad1aaf12dac9c9932cedd82f0048e731" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Sensor" kindref="compound">Sensor</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;Sensor *&gt;&amp; iDynTree::SensorsList::ConstTypedIterator::iteratingList</definition>
        <argsstring></argsstring>
        <name>iteratingList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="402" column="21" bodyfile="iDynTree/Sensors.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a663096d8b30221bbeb67564ef540ef96" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classiDynTree_1_1Sensor" kindref="compound">Sensor</ref> * &gt;::<ref refid="classiDynTree_1_1SensorsList_1_1ConstIterator" kindref="compound">const_iterator</ref></type>
        <definition>std::vector&lt;Sensor *&gt;::const_iterator iDynTree::SensorsList::ConstTypedIterator::internalIterator</definition>
        <argsstring></argsstring>
        <name>internalIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="403" column="38" bodyfile="iDynTree/Sensors.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a1fa739bc23b79871521bbbf979a6595a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::SensorsList::ConstTypedIterator::ConstTypedIterator</definition>
        <argsstring>(std::vector&lt; Sensor * &gt; &amp;list)</argsstring>
        <name>ConstTypedIterator</name>
        <param>
          <type>std::vector&lt; <ref refid="classiDynTree_1_1Sensor" kindref="compound">Sensor</ref> * &gt; &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="399" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a29b49e33da35831c6104650a976d136a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iDynTree::SensorsList::ConstTypedIterator::constructor</definition>
        <argsstring>()</argsstring>
        <name>constructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="405" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1ae92fdc1297fd95c9fe792af1efe27f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::SensorsList::ConstTypedIterator::ConstTypedIterator</definition>
        <argsstring>(const TypedIterator &amp;)</argsstring>
        <name>ConstTypedIterator</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList_1_1TypedIterator" kindref="compound">TypedIterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="414" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a62f43c588b1aba04d6b78977cfd776a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" kindref="compound">ConstTypedIterator</ref> &amp;</type>
        <definition>ConstTypedIterator&amp; iDynTree::SensorsList::ConstTypedIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="416" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a0f66dbc8bb864320469cef80d1440f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" kindref="compound">ConstTypedIterator</ref></type>
        <definition>ConstTypedIterator iDynTree::SensorsList::ConstTypedIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="417" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a2ec99ce923627f5d696136a0a74e805c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::SensorsList::ConstTypedIterator::operator==</definition>
        <argsstring>(const ConstTypedIterator &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" kindref="compound">ConstTypedIterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="419" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a26f67388539f553dbab287656bf9dbc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::SensorsList::ConstTypedIterator::operator==</definition>
        <argsstring>(const TypedIterator &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList_1_1TypedIterator" kindref="compound">TypedIterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="420" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1acec6f74521d5fb93c3c6e30193167e4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::SensorsList::ConstTypedIterator::operator!=</definition>
        <argsstring>(const ConstTypedIterator &amp;s) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator" kindref="compound">ConstTypedIterator</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="421" column="21" bodyfile="iDynTree/Sensors.h" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a1180e7fc84c56ab497bb97a985ba9464" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::SensorsList::ConstTypedIterator::operator!=</definition>
        <argsstring>(const TypedIterator &amp;s) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList_1_1TypedIterator" kindref="compound">TypedIterator</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="422" column="21" bodyfile="iDynTree/Sensors.h" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a512918208a53587b4ae7151e6efef530" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1Sensor" kindref="compound">reference</ref></type>
        <definition>reference iDynTree::SensorsList::ConstTypedIterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="424" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a434f86e86fe68c9cdcc3eeef2200064b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1Sensor" kindref="compound">pointer</ref></type>
        <definition>pointer iDynTree::SensorsList::ConstTypedIterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="425" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1af1cc782593c29afa0829ebdb5e565206" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::SensorsList::ConstTypedIterator::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Sensors.h" line="427" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iDynTree/Sensors.h" line="396" column="5" bodyfile="iDynTree/Sensors.h" bodystart="397" bodyend="428"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a29b49e33da35831c6104650a976d136a" prot="private" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>constructor</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a1fa739bc23b79871521bbbf979a6595a" prot="private" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>ConstTypedIterator</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1ae92fdc1297fd95c9fe792af1efe27f7c" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>ConstTypedIterator</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1aa689a1caaa190d764b62647a57c50c14" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>difference_type</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a663096d8b30221bbeb67564ef540ef96" prot="private" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>internalIterator</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1af1cc782593c29afa0829ebdb5e565206" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>isValid</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1aad1aaf12dac9c9932cedd82f0048e731" prot="private" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>iteratingList</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a3b3e65284f302aeb199ef1fdc1f80949" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>iterator_category</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1acec6f74521d5fb93c3c6e30193167e4b" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator!=</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a1180e7fc84c56ab497bb97a985ba9464" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator!=</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a512918208a53587b4ae7151e6efef530" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator*</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a62f43c588b1aba04d6b78977cfd776a4" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator++</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a0f66dbc8bb864320469cef80d1440f2a" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator++</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a434f86e86fe68c9cdcc3eeef2200064b" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator-&gt;</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a2ec99ce923627f5d696136a0a74e805c" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator==</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a26f67388539f553dbab287656bf9dbc7" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>operator==</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a17f21b802f07869341619a00063d1fdb" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>pointer</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1a9e6220679fb6468ca5727658eb5f9100" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>reference</name></member>
      <member refid="classiDynTree_1_1SensorsList_1_1ConstTypedIterator_1af6c1fd450b1cfbd0b53731fa97613b6a" prot="public" virt="non-virtual"><scope>iDynTree::SensorsList::ConstTypedIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
