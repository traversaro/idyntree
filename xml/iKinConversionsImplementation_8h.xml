<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="iKinConversionsImplementation_8h" kind="file" language="C++">
    <compoundname>iKinConversionsImplementation.h</compoundname>
    <includes refid="iKinConversions_8h" local="no">iDynTree/iKinConversions.h</includes>
    <includes refid="DenavitHartenberg_8h" local="no">iDynTree/DenavitHartenberg.h</includes>
    <includes refid="YARPConversions_8h" local="no">iDynTree/YARPConversions.h</includes>
    <includes local="no">iCub/iKin/iKinFwd.h</includes>
    <includes local="no">cassert</includes>
    <includedby refid="iKinConversions_8h" local="yes">iDynTree/iKinConversions.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>iCub/iKin/iKinFwd.h</label>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="1">
        <label>iDynTree/iKinConversionsImplementation.h</label>
        <link refid="iKinConversionsImplementation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceiDynTree">iDynTree</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="iKinConversionsImplementation_8h_1a907871ccc9e6e56fb19fa0af4c0854c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DHLink</type>
        <definition>DHLink iDynTree::iKinLink2DHLink</definition>
        <argsstring>(const iCub::iKin::iKinLink &amp;ikinlink)</argsstring>
        <name>iKinLink2DHLink</name>
        <param>
          <type>const iCub::iKin::iKinLink &amp;</type>
          <declname>ikinlink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="19" column="15" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="19" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="iKinConversionsImplementation_8h_1ae6d845189d4491128320b2c78c6082ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iCub::iKin::iKinLink</type>
        <definition>iCub::iKin::iKinLink iDynTree::DHLink2iKinLink</definition>
        <argsstring>(const DHLink &amp;dhLink)</argsstring>
        <name>DHLink2iKinLink</name>
        <param>
          <type>const DHLink &amp;</type>
          <declname>dhLink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="33" column="29" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="group__iDynTreeICUB_1ga93e84fbc1880a920199aae0cbabd76ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::DHChainFromiKinChain</definition>
        <argsstring>(iCub::iKin::iKinChain &amp;ikinChain, DHChain &amp;out)</argsstring>
        <name>DHChainFromiKinChain</name>
        <param>
          <type>iCub::iKin::iKinChain &amp;</type>
          <declname>ikinChain</declname>
        </param>
        <param>
          <type>DHChain &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Load a <ref refid="classiDynTree_1_1DHChain" kindref="compound">iDynTree::DHChain</ref> object from a iCub::iKin::iKinChain . </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="40" column="13" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="40" bodyend="63" declfile="iDynTree/iKinConversions.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__iDynTreeICUB_1gadb9ad80c8043481f2bb8f013542db690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::modelFromiKinChain</definition>
        <argsstring>(iCub::iKin::iKinChain &amp;ikinChain, Model &amp;output)</argsstring>
        <name>modelFromiKinChain</name>
        <param>
          <type>iCub::iKin::iKinChain &amp;</type>
          <declname>ikinChain</declname>
        </param>
        <param>
          <type>Model &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Load a <ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> object from a iCub::iKin::iKinChain . </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="65" column="13" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="65" bodyend="78" declfile="iDynTree/iKinConversions.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__iDynTreeICUB_1gaaedc638580c296a9a355975268ea25bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::iKinLimbFromDHChain</definition>
        <argsstring>(const DHChain &amp;dhChain, iCub::iKin::iKinLimb &amp;ikinLimb)</argsstring>
        <name>iKinLimbFromDHChain</name>
        <param>
          <type>const DHChain &amp;</type>
          <declname>dhChain</declname>
        </param>
        <param>
          <type>iCub::iKin::iKinLimb &amp;</type>
          <declname>ikinLimb</declname>
        </param>
        <briefdescription>
<para>Create a iCub::iKin::iKinLimb from an <ref refid="classiDynTree_1_1DHChain" kindref="compound">iDynTree::DHChain</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="119" column="13" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="119" bodyend="129" declfile="iDynTree/iKinConversions.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__iDynTreeICUB_1ga681d23161951646fcb60dc7681e59482" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::iKinLimbFromModel</definition>
        <argsstring>(const Model &amp;model, const std::string &amp;baseFrame, const std::string &amp;distalFrame, iCub::iKin::iKinLimb &amp;ikinLimb)</argsstring>
        <name>iKinLimbFromModel</name>
        <param>
          <type>const Model &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>baseFrame</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>distalFrame</declname>
        </param>
        <param>
          <type>iCub::iKin::iKinLimb &amp;</type>
          <declname>ikinLimb</declname>
        </param>
        <briefdescription>
<para>Extract an iCub::iKin::iKinLimb from an <ref refid="classiDynTree_1_1Model" kindref="compound">iDynTree::Model</ref> . </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/iKinConversionsImplementation.h" line="131" column="13" bodyfile="iDynTree/iKinConversionsImplementation.h" bodystart="131" bodyend="140" declfile="iDynTree/iKinConversions.h" declline="76" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iDynTree/iKinConversionsImplementation.h"/>
  </compounddef>
</doxygen>
